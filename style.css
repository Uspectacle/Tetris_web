html,
body {
  background-image: url("https://github.com/Uspectacle/Tetris_web/blob/cff4c714666de5c4da638772c39eab298d79f0ce/russia.jpg");
  background-position: top top;
  background-size: cover cover;
  background-repeat: no-repeat;
  background-color: #2f2d5d;

  width: 100%;
  height: 90%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
}

.container {
  display: flex;
  flex-wrap: wrap;
}

.sub-container {
  width: 150px;
  display: block;
  padding-left: 1em;
}

.uper-grid {
  display: block;
  padding-left: 1em;
}

.grid {
  width: 300px;
  height: 600px;
  display: flex;
  flex-wrap: wrap;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 3px;
  outline: solid transparent;
  outline-color: rgba(255, 255, 255, 0.5);
}

.grid div {
  width: 30px;
  height: 30px;
}

.tetromino {
  background-color: blue;
  border-radius: 3px;
  outline: solid;
  outline-color: rgba(0, 0, 0, 0.2);
}

.mini-grid {
  width: 150px;
  height: 150px;
  display: flex;
  flex-wrap: wrap;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 3px;
  outline: solid transparent;
  outline-color: rgba(255, 255, 255, 0.5);
}

.mini-grid div {
  width: 30px;
  height: 30px;
}

.data {
  background-color: #bea903;
  border: solid transparent;
  border-radius: 16px;
  border-width: 0 0 4px;
  box-sizing: border-box;
  color: #ffffff;
  display: inline-block;
  font-family: din-round, sans-serif;
  font-size: auto;
  font-weight: 700;
  overflow: visible;
  padding: 13px 16px;
  text-align: center;
  text-transform: uppercase;
  touch-action: manipulation;
  transform: translateZ(0);
  transition: filter 0.2s;
  user-select: none;
  -webkit-user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  width: auto;
}

.button-19 {
  appearance: button;
  background-color: #1fa812;
  border: solid transparent;
  border-radius: 16px;
  border-width: 0 0 4px;
  box-sizing: border-box;
  color: #ffffff;
  cursor: pointer;
  display: inline-block;
  font-family: din-round, sans-serif;
  font-size: 15px;
  font-weight: 700;
  letter-spacing: 0.8px;
  line-height: 20px;
  margin: 0;
  outline: none;
  overflow: visible;
  padding: 13px 16px;
  text-align: center;
  text-transform: uppercase;
  touch-action: manipulation;
  transform: translateZ(0);
  transition: filter 0.2s;
  user-select: none;
  -webkit-user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  width: auto;
}

.button-19:after {
  background-clip: padding-box;
  background-color: #ffffff49;
  border: solid transparent;
  border-radius: 16px;
  border-width: 0 0 4px;
  bottom: -4px;
  content: "";
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.button-19:main,
.button-19:focus {
  user-select: auto;
}

.button-19:hover:not(:disabled) {
  filter: brightness(1.1);
}

.button-19:disabled {
  cursor: auto;
}

/* button layout */
.directional-buttons {
  margin-left: 50px;
  margin-right: 50px;
  margin-top: 50px;
  /* Define the size of the grid */
  /* Other things rely on this! Change at your own peril! */
  width: 16rem;
  height: 16rem;
  /* display the buttons in a grid */
  display: grid;
  /* leave a little gap between columns/rows */
  grid-gap: 0.5rem;
  /* define a 3 x 3 grid with middle column/row larger */
  grid-template-columns: 45fr 60fr 45fr;
  grid-template-rows: 45fr 60fr 45fr;
  /* name the cells in the grid */
  grid-template-areas:
    "....  up  ....."
    "left  ..  right"
    ".... down .....";
}

/* hides the button text */
.visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}

/* base button */
.direction-button {
  /* the button colours */
  color: rgb(65, 9, 156);
  /* since there's no text, we can use the color value for the background */
  background: currentcolor;
  /* clears default button styles */
  border: none;
  /* makes sure the triangles are moved relative to the button */
  position: relative;
}

/* the overlapping outside triangle 
 * actually, it's just a rotated square
 */
.direction-button:before {
  /* make the triangle display */
  display: block;
  content: "";
  /* make the triangle able to be moved around relative to the button */
  position: absolute;
  /* approximately makes the diagonal the right size */
  width: 4.25rem;
  height: 4.25rem;
  /* rotate the square (to look like a triangle) */
  transform: rotate(45deg);
  /* use the current color value for the background to match the button */
  background: currentcolor;
}

/* the inner direction triangle */
.direction-button:after {
  /* make the triangle display */
  display: block;
  content: "";
  /* make the triangle able to be moved around relative to the button */
  position: absolute;
  /* same border-based triangle trick as before */
  border: 2rem solid transparent;
  /* using color value for border-color to make it easier to change */
  color: rgba(255, 250, 250, 0.6);
}

/* when the button is hovered */
.direction-button:hover {
  /* make the button a different color */
  color: rgb(86, 7, 160);
}

/* when the button is pressed */
.direction-button:active:after {
  /* make the inner triangle a different color! */
  color: rgb(167, 124, 236);
}

/* individual button styles */
.up {
  /* puts the button in the named grid cell */
  grid-area: up;
  /* only curves the outer corners */
  border-radius: 0.5rem 0.5rem 0 0;
}
.up:before {
  /* center the overlapping triangle horizontally */
  left: calc(50% - 2.125rem);
  /* position it so it overlaps just right */
  bottom: -2.125rem;
}
.up:after {
  /* do the border-based triangle trick */
  border-bottom-color: currentcolor;
  /* center inner triangle horizontally */
  left: calc(50% - 2rem);
  /* position it just right */
  top: -1rem;
}

.left {
  /* puts the button in the named grid cell */
  grid-area: left;
  /* only curves the outer corners */
  border-radius: 0.5rem 0 0 0.5rem;
}
.left:before {
  /* position it so it overlaps just right */
  right: -2.125rem;
  /* center the overlapping triangle vertically */
  top: calc(50% - 2.125rem);
}
.left:after {
  /* do the border-based triangle trick */
  border-right-color: currentcolor;
  /* center inner triangle vertically */
  top: calc(50% - 2rem);
  /* position it just right */
  left: -1rem;
}

.right {
  /* puts the button in the named grid cell */
  grid-area: right;
  /* only curves the outer corners */
  border-radius: 0 0.5rem 0.5rem 0;
}
.right:before {
  /* position it so it overlaps just right */
  left: -2.125rem;
  /* center the overlapping triangle vertically */
  top: calc(50% - 2.125rem);
}
.right:after {
  /* do the border-based triangle trick */
  border-left-color: currentcolor;
  /* center inner triangle vertically */
  top: calc(50% - 2rem);
  /* position it just right */
  right: -1rem;
}

.down {
  /* puts the button in the named grid cell */
  grid-area: down;
  /* only curves the outer corners */
  border-radius: 0 0 0.5rem 0.5rem;
}
.down:before {
  /* center the overlapping triangle horizontally */
  left: calc(50% - 2.125rem);
  /* position it so it overlaps just right */
  top: -2.125rem;
}
.down:after {
  /* do the border-based triangle trick */
  border-top-color: currentcolor;
  /* center inner triangle horizontally */
  left: calc(50% - 2rem);
  /* position it just right */
  bottom: -1rem;
}
